{"version":3,"sources":["components/Details.js","components/Filter.js","components/PersonForm.js","services/persons.js","App.js","index.js"],"names":["Details","person","deleteHandler","className","name","number","onClick","id","Filter","props","onChange","handleFilterChange","PersonForm","value","nameValue","nameChangeHandler","numberValue","numberChangeHandler","type","clickHandler","baseURL","axios","get","then","response","data","personObject","post","newNumber","changedPerson","put","delete","App","useState","persons","setPersons","newName","setNewName","setNewNumber","showAll","setShowAll","filter","setFilter","message","setMessage","personsToShow","toLowerCase","includes","Notification","useEffect","phonebookService","allPersons","personToDelete","find","window","confirm","setTimeout","catch","error","event","filterText","target","length","preventDefault","updatedPerson","map","newPerson","concat","console","log","i","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46ff5150.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Details = ({ person, deleteHandler }) => {\r\n    return (\r\n        <div className=\"entry\">\r\n            {person.name}: {person.number} &nbsp;\r\n            <button onClick={() => deleteHandler(person.id)}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details","import React from 'react'\r\n\r\nconst Filter = props => {\r\n    return (\r\n        <div>\r\n            Filter names containing <input onChange={props.handleFilterChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form>\r\n            <div>\r\n                name: <input value={props.nameValue} onChange={props.nameChangeHandler} />\r\n            </div>\r\n            <div>\r\n                number: <input value={props.numberValue} onChange={props.numberChangeHandler} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\" onClick={props.clickHandler}>add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseURL = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (personObject) => {\r\n    const request = axios.post(baseURL, personObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (person, newNumber) => {\r\n    const changedPerson = { ...person, number: newNumber }\r\n    const request = axios.put(`${baseURL}/${person.id}`, changedPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseURL}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Details from './components/Details'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport './index.css'\n\nimport phonebookService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const personsToShow = showAll ? persons : persons.filter(person => person.name.toLowerCase().includes(filter))\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n\n    return (\n      <div className=\"message\">\n        {message}\n      </div>\n    )\n  }\n\n  useEffect(() => {\n    phonebookService\n      .getAll()\n      .then(allPersons => setPersons(allPersons))\n  }, [])\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const personExists = persons.find(person => person.name === newName)\n\n    if (personExists) {\n      const person = persons.find(person => person.name === newName)\n\n      const confirm = window.confirm(`Change ${person.name} number to ${newNumber}?`)\n\n      if (!confirm) { return null }\n\n      phonebookService.update(person, newNumber)\n        .then(updatedPerson => {\n          setPersons(persons.map(person =>\n            person.name === updatedPerson.name ? updatedPerson : person))\n        })\n        .then(setMessage(`${person.name} number changed to ${newNumber}`))\n    }\n    else {\n\n      phonebookService.create(personObject)\n        .then(newPerson => {\n          setPersons(persons.concat(newPerson))\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          setMessage(error.response.data.error)\n        })\n    }\n\n    setNewName('')\n    setNewNumber('')\n\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    const filterText = event.target.value.toLowerCase()\n    if (filterText.length > 0) {\n      setFilter(filterText)\n      setShowAll(false)\n    }\n    else {\n      setShowAll(true)\n    }\n  }\n\n  const deleteHandler = (id) => {\n    const personToDelete = persons.find(person => person.id === id)\n    const confirmDelete = window.confirm(`Delete ${personToDelete.name}?`)\n    if (confirmDelete) {\n      phonebookService.remove(id)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== id))\n          setMessage(`${personToDelete.name} deleted from phonebook.`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setMessage(\n            `${personToDelete.name} does not exist in phone book`\n          )\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={message} />\n\n      <Filter handleFilterChange={handleFilterChange} />\n\n      <h3>Add Person and Number</h3>\n\n      <PersonForm\n        nameValue={newName} nameChangeHandler={handleNameChange}\n        numberValue={newNumber} numberChangeHandler={handleNumberChange}\n        clickHandler={addPerson}\n      />\n\n      <h2>Numbers </h2>\n      {personsToShow.map((person, i) =>\n        <Details key={i} person={person} deleteHandler={deleteHandler} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}